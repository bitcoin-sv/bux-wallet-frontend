##########################################################
### !NOTE: This file is meant to be used by start.sh! ###
########################################################
services:
  spv-wallet-web-frontend:
    build:
      context: .
      dockerfile: ./release/Dockerfile
    ports:
      - '3002:80'
    configs:
      - source: frontend-env-config
        target: /usr/share/nginx/html/env-config.json

  spv-wallet-web-backend:
    image: bsvb/bux-wallet-backend:latest # CHECK IT
    pull_policy: always
    environment:
      BUX_PAYMAIL_DOMAIN: '${RUN_PAYMAIL_DOMAIN}' # CHECK IT
      HTTP_SERVER_CORS_ALLOWEDDOMAINS: 'http://localhost:3002'
    env_file:
      - .env.config
    ports:
      - '8081:8080'
    links:
      - spv-wallet-postgresql
    depends_on:
      spv-wallet-postgresql:
        condition: service_healthy

  block-headers-service:
    image: bsvb/pulse:latest
    pull_policy: always
    command:
      - '--preloaded'
    ports:
      - '8080:8080'
    volumes:
      - block-headers-service-data:/app/data

  spv-wallet:
    image: buxorg/bux-server:latest # CHECK IT
    pull_policy: always
    environment:
      BUX_PAYMAIL_DOMAINS: '${RUN_PAYMAIL_DOMAIN}' # CHECK IT
    env_file:
      - .env.config
    ports:
      - '3003:3003'
    restart: always

  spv-wallet-redis:
    image: redis
    hostname: redis
    ports:
      - '6379:6379'
    volumes:
      - spv-wallet-redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']

  spv-wallet-postgresql:
    image: postgres
    volumes:
      - spv-wallet-postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U postgres -d postgres'"]
      timeout: 5s
      retries: 3

  spv-wallet-mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: xapi
    ports:
      - '27017:27017'
    volumes:
      - spv-wallet-mongodb-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  spv-wallet-postgresql-data:
    driver: local
  spv-wallet-redis-data:
    driver: local
  spv-wallet-mongodb-data:
    driver: local
  block-headers-service-data:
    driver: local

configs:
  frontend-env-config:
    content: |
      {
          "paymailDomain": "${RUN_PAYMAIL_DOMAIN}",
          "apiUrl": "http://localhost:8081"
      }
